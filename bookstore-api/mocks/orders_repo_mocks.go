// Code generated by MockGen. DO NOT EDIT.
// Source: orders_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "bookstore-api/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOrdersRepository is a mock of OrdersRepository interface.
type MockOrdersRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOrdersRepositoryMockRecorder
}

// MockOrdersRepositoryMockRecorder is the mock recorder for MockOrdersRepository.
type MockOrdersRepositoryMockRecorder struct {
	mock *MockOrdersRepository
}

// NewMockOrdersRepository creates a new mock instance.
func NewMockOrdersRepository(ctrl *gomock.Controller) *MockOrdersRepository {
	mock := &MockOrdersRepository{ctrl: ctrl}
	mock.recorder = &MockOrdersRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m MockOrdersRepository) EXPECT() *MockOrdersRepositoryMockRecorder {
	return m.recorder
}

// CreateOrder mocks base method.
func (m MockOrdersRepository) CreateOrder(ctx context.Context, bookId, orderValue string, orderQty, count int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", ctx, bookId, orderValue, orderQty, count)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder.
func (mr MockOrdersRepositoryMockRecorder) CreateOrder(ctx, bookId, orderValue, orderQty, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockOrdersRepository)(nil).CreateOrder), ctx, bookId, orderValue, orderQty, count)
}

// GetAllOrders mocks base method.
func (m MockOrdersRepository) GetAllOrders(ctx context.Context) (model.Orders, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllOrders", ctx)
	ret0, _ := ret[0].(model.Orders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllOrders indicates an expected call of GetAllOrders.
func (mr MockOrdersRepositoryMockRecorder) GetAllOrders(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllOrders", reflect.TypeOf((*MockOrdersRepository)(nil).GetAllOrders), ctx)
}
